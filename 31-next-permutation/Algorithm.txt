You have to find the next permutation of a given permutation.
Next permutation is always lexographically greater than the given permutation except if the given permutation is the last.
Step 1 -----> First of all find the pivot_index.

Initially set pivot_index to -1

What is pivot_index?
Traverse from the end of the array till second last element, find the first element which is greater than its next element (backward traversing).
Now your pivot_index is the index of the next element , store its index somewhere
break the loop

Step 1 -----> 2 If pivot_index is -1 it means you have not found it:
    If you have traversed the whole array and pivot_index is still -1, it means you have given the last permutation, in this case simply return the first permutation.
    The reverse array of your given array is basically the first permutation.

Step 1 -----> 3 If pivot_index is not -1 it means you've found it:
    Now you have to find the rightmost element greater than the element at pivot_index (or the first element from right side which is greater than element at pivot_index)
    So traverse from end to array[pivot_index - 1] and found the rightmost greater element.
    Then swap both elements.
    break the loop

Step 1 -----> 4 The last step is to reverse the array just after the pivot_index 
